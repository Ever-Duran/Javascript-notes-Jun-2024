Indise your script tag add this code: 
$(document).ready(function() { 
});

<script>$(document).ready(function(){
});
</script>

********************
For example, let's make all of your button elements bounce. 
Just add this code inside your document ready function:
<script>
  $(document).ready(function() {
$("button").addClass("animated bounce");
  });
</script>

**
Target Elements by Class Using jQuery

We select the class just like CSS with a dot .
$(".text-primary").addClass("animated shake");


<script>
  $(document).ready(function() {
 $("button").addClass("animated bounce");
 $(".well").addClass("animated shake")
  });
</script>

***
Target with an id using #.
$("#target6").addClass("animated fadeOut");
$("#target3").addClass("animated fadeOut");
$("#target6").addClass("animated fadeOut");

**
Now you know three ways of targeting elements: by type: $("button"), by class: $(".btn"), and by id $("#target1").

**
Change the CSS of an Element Using jQuery

Change the color to blue:
$("#target1").css("color", "blue");

E.g.: 
<script>
  $(document).ready(function() {
    $("#target1").css("color","red");
  });
</script>

***
Disable an Element Using jQuery
How to disable all buttons:

$("button").prop("disabled", true);
Disable only the target1 button.


$("#target1").prop("disabled", true);

**
Change Text Inside an Element Using jQuery:
Here's how you would rewrite and emphasize the text of our heading:

$("h3").html("<em>jQuery Playground</em>");

.text() only alters text without adding tags

Note that while the <i> tag has traditionally been used to emphasize text, it has since been adopted for use as a tag for icons. 
The <em> tag is now widely accepted as the tag for emphasis. Either will work for this challenge.

<script>
  $(document).ready(function() {
    $("#target1").css("color", "red");
    $("#target4").html("<em>#target4</em>");
  });
</script>

*****
Remove an Element Using jQuery
Remove an HTML element
Remove the #target4 element from the page by using the .remove() function.

    $("#target4").remove()

*****
Use appendTo to Move Elements with jQuery
Move from one div to another one.

$("#target4").appendTo("#left-well");
Move your target2 element from your left-well to your right-well.

***
$("#target2").appendTo("#right-well")


*****
Clone an Element Using jQuery
clone() makes a copy of an element.

For example, if we wanted to copy target2 from our left-well to our right-well, we would use:

$("#target2").clone().appendTo("#right-well");

**
$("#target5").clone().appendTo("#left-well");

*****
Target the Parent of an Element Using jQuery

parent() that allows you to access the parent of whichever element you've selected.

$("#target1").parent().css("background-color", "red");

*****
Target the Children of an Element Using jQuery

$("#right-well").children().css("color", "orange");

*****

Target a Specific Child of an Element Using jQuery

$(".target:nth-child(2)").addClass("animated bounce");

*****

Target Even Elements Using jQuery
Target elements using :odd or :even selectors.
jQuery is zero-indexed which means the first element in a selection has a position of 0.

$(".target:even").addClass("animated shake");

*****
Use jQuery to Modify the Entire Page
Here's how we would make the entire body fade out: $("body").addClass("animated fadeOut");

But let's do something more dramatic. Add the classes animated and hinge to your body element.

$("body").addClass("animated hinge");

